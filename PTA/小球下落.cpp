/* 
小球下落（Dropping Balls, UVa 679）
有一棵二叉树，最大深度为D，且所有叶子的深度都相同。所有结点从上到下从左到右
编号为1, 2, 3,…, 2D-1。在结点1处放一个小球，它会往下落。每个内结点上都有一个开关，
初始全部关闭，当每次有小球落到一个开关上时，状态都会改变。当小球到达一个内结点
时，如果该结点上的开关关闭，则往左走，否则往右走，直到走到叶子结点，如图6-2所
示 
*/
/* 
不难发现，对于一个结点k，其左子结点、右子结点的编号分别是2k和2k+1

 */
#include <bits/stdc++.h>

const int maxd = 20;
int s[1 << maxd]; //最大结点个数为2maxd-1
int main() {
	int D, I;
	// while (scanf("%d%d", &D, &I) == 2) {
	// 	memset(s, 0, sizeof(s));	  //开关
	// 	int k, n = (1 << D) - 1;	  //n是最大结点编号
	// 	for (int i = 0; i < I; i++) { //连续让I个小球下落
	// 		k = 1;
	// 		do {
	// 			s[k] = !s[k];
	// 			k = s[k] ? k * 2 : k * 2 + 1; //根据开关状态选择下落方向
	// 		} while (k <= n);
	// 	}
	// 	printf("%d\n", k / 2); //“出界”之前的叶子编号
	// }

	while (scanf("%d%d", &D, &I) == 2) {
		int k = 1;
		for (int i = 0; i < D - 1; i++)
			if (I % 2) {
				k = k * 2;
				I = (I + 1) / 2;
			}
			else {
				k = k * 2 + 1;
				I /= 2;
			}
		printf("%d\n", k);
	}

	return 0;
}
